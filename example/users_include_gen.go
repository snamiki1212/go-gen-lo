// Code generated by "go-gen-lo"; DO NOT EDIT.
// Based on information from https://github.com/snamiki1212/go-gen-lo

package main

import "github.com/samber/lo"

/************************************************
 ** lo basic methods
 ************************************************/

// Filter
func (xs UserInclude) Filter(predicate func(User, int) bool) UserInclude {
	return lo.Filter(xs, predicate)
}

/************************************************
 ** lo extended methods
 ************************************************/

// -- Filter ------------------------------------

// FilterByUserID
func (xs UserInclude) FilterByUserID(_UserID string) UserInclude {
	return lo.Filter(xs, func(entity User, index int) bool {
		return entity.UserID == _UserID
	})
}

// FilterByInt
func (xs UserInclude) FilterByInt(_Int int) UserInclude {
	return lo.Filter(xs, func(entity User, index int) bool {
		return entity.Int == _Int
	})
}

// FilterByIntPtr
func (xs UserInclude) FilterByIntPtr(_IntPtr *int) UserInclude {
	return lo.Filter(xs, func(entity User, index int) bool {
		return entity.IntPtr == _IntPtr
	})
}

// FilterByBool
func (xs UserInclude) FilterByBool(_Bool bool) UserInclude {
	return lo.Filter(xs, func(entity User, index int) bool {
		return entity.Bool == _Bool
	})
}

// FilterByBoolPtr
func (xs UserInclude) FilterByBoolPtr(_BoolPtr *bool) UserInclude {
	return lo.Filter(xs, func(entity User, index int) bool {
		return entity.BoolPtr == _BoolPtr
	})
}

// FilterByStr
func (xs UserInclude) FilterByStr(_Str string) UserInclude {
	return lo.Filter(xs, func(entity User, index int) bool {
		return entity.Str == _Str
	})
}

// FilterByStrPtr
func (xs UserInclude) FilterByStrPtr(_StrPtr *string) UserInclude {
	return lo.Filter(xs, func(entity User, index int) bool {
		return entity.StrPtr == _StrPtr
	})
}

// FilterByStruct0
func (xs UserInclude) FilterByStruct0(_Struct0 DefinedStruct0) UserInclude {
	return lo.Filter(xs, func(entity User, index int) bool {
		return entity.Struct0 == _Struct0
	})
}

// FilterByStructPtr0
func (xs UserInclude) FilterByStructPtr0(_StructPtr0 *DefinedStruct0) UserInclude {
	return lo.Filter(xs, func(entity User, index int) bool {
		return entity.StructPtr0 == _StructPtr0
	})
}

// FilterByStruct1
func (xs UserInclude) FilterByStruct1(_Struct1 DefinedStruct1) UserInclude {
	return lo.Filter(xs, func(entity User, index int) bool {
		return entity.Struct1 == _Struct1
	})
}

// FilterByStructPtr1
func (xs UserInclude) FilterByStructPtr1(_StructPtr1 *DefinedStruct1) UserInclude {
	return lo.Filter(xs, func(entity User, index int) bool {
		return entity.StructPtr1 == _StructPtr1
	})
}

// FilterByChanSend0
func (xs UserInclude) FilterByChanSend0(_ChanSend0 chan<- int) UserInclude {
	return lo.Filter(xs, func(entity User, index int) bool {
		return entity.ChanSend0 == _ChanSend0
	})
}

// FilterByChanSendPtr0
func (xs UserInclude) FilterByChanSendPtr0(_ChanSendPtr0 *chan<- int) UserInclude {
	return lo.Filter(xs, func(entity User, index int) bool {
		return entity.ChanSendPtr0 == _ChanSendPtr0
	})
}

// -- KeyBy ------------------------------------

// KeyByUserID
func (xs UserInclude) KeyByUserID() map[string]User {
	return lo.KeyBy(xs, func(entity User) string {
		return entity.UserID
	})
}

// KeyByInt
func (xs UserInclude) KeyByInt() map[int]User {
	return lo.KeyBy(xs, func(entity User) int {
		return entity.Int
	})
}

// KeyByIntPtr
func (xs UserInclude) KeyByIntPtr() map[*int]User {
	return lo.KeyBy(xs, func(entity User) *int {
		return entity.IntPtr
	})
}

// KeyByBool
func (xs UserInclude) KeyByBool() map[bool]User {
	return lo.KeyBy(xs, func(entity User) bool {
		return entity.Bool
	})
}

// KeyByBoolPtr
func (xs UserInclude) KeyByBoolPtr() map[*bool]User {
	return lo.KeyBy(xs, func(entity User) *bool {
		return entity.BoolPtr
	})
}

// KeyByStr
func (xs UserInclude) KeyByStr() map[string]User {
	return lo.KeyBy(xs, func(entity User) string {
		return entity.Str
	})
}

// KeyByStrPtr
func (xs UserInclude) KeyByStrPtr() map[*string]User {
	return lo.KeyBy(xs, func(entity User) *string {
		return entity.StrPtr
	})
}

// KeyByStruct0
func (xs UserInclude) KeyByStruct0() map[DefinedStruct0]User {
	return lo.KeyBy(xs, func(entity User) DefinedStruct0 {
		return entity.Struct0
	})
}

// KeyByStructPtr0
func (xs UserInclude) KeyByStructPtr0() map[*DefinedStruct0]User {
	return lo.KeyBy(xs, func(entity User) *DefinedStruct0 {
		return entity.StructPtr0
	})
}

// KeyByStruct1
func (xs UserInclude) KeyByStruct1() map[DefinedStruct1]User {
	return lo.KeyBy(xs, func(entity User) DefinedStruct1 {
		return entity.Struct1
	})
}

// KeyByStructPtr1
func (xs UserInclude) KeyByStructPtr1() map[*DefinedStruct1]User {
	return lo.KeyBy(xs, func(entity User) *DefinedStruct1 {
		return entity.StructPtr1
	})
}

// KeyByChanSend0
func (xs UserInclude) KeyByChanSend0() map[chan<- int]User {
	return lo.KeyBy(xs, func(entity User) chan<- int {
		return entity.ChanSend0
	})
}

// KeyByChanSendPtr0
func (xs UserInclude) KeyByChanSendPtr0() map[*chan<- int]User {
	return lo.KeyBy(xs, func(entity User) *chan<- int {
		return entity.ChanSendPtr0
	})
}
